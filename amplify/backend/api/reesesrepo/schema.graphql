type User @model @key(name: "idByName", fields: ["userName"], queryField: "idByName") {
  id: ID!
  userName: String!
  searchName: String!
  email: String
  hosting: [Party] @connection(name: "hostList")
  gifts: [Gift] @connection(name: "GiftGroup")
  parties: [GuestList] @connection(name: "ConUser")
  friends: [FriendList] @connection(keyName: "byUser", fields: ["id"])
}

type FriendList @model
    @key(name: "byUser", fields: ["userID", "userName"]) {
    id: ID!
    userID: ID!
    userName: String!
    accepted: Boolean
    declined: Boolean
    user: User @connection(fields: ["userID"])
}

type GuestList @model {
  id: ID!
  inviteStatus: String
  invitee: String
  invitedUser: String
  takenTurn: Boolean
  turnOrder: Int
  user: User @connection(name: "ConUser")
  party: Party @connection(name:"ConParty")
}

type Gift @model {
  id: ID!
  title: String!
  number: String
  partyGoer: String
  timesStolen: Int
  fileKey: String
  user: User @connection(name: "GiftGroup")
  party: Party @connection(name: "PartyGifts")
}

type Party @model {
  id: ID!
  title: String!
  hostedOn: String
  hostedAt: String
  partyDateAWS: AWSDate
  partyDate: String
  price: String
  isReady: Boolean
  isFinished: Boolean
  stealLimit: Int
  lastGiftStolen: String
  theHost: User @connection(name: "hostList")
  users: [GuestList] @connection(name: "ConParty")
  gifts: [Gift] @connection(name: "PartyGifts")
}

type Subscription {
  onUpdateOfSpecificParty(id: ID!): Party
  @aws_subscribe(mutations: ["updateParty"])

  onCreateOfUserId(invitedUser: String): GuestList
  @aws_subscribe(mutations: ["createGuestList"])

  onUpdateOfGuestListByUserId(invitedUser: String): GuestList
  @aws_subscribe(mutations: ["updateGuestList"])

  onDeleteSpecificGuestList(invitedUser: String): GuestList
  @aws_subscribe(mutations: ["deleteGuestList"])

  onUpdateHostGuestList(invitee: String): GuestList
  @aws_subscribe(mutations: ["updateGuestList"])

  onUpdateGiftOfSpecificParty(number: String): Gift
  @aws_subscribe(mutations: ["updateGift"])

  onCreateOfFriendList(userName: String): FriendList
  @aws_subscribe(mutations: ["createFriendList"])

  onDeleteOfFriendList(userName: String): FriendList
  @aws_subscribe(mutations: ["deleteFriendList"])

  onUpdateOfFriendList(userName: String): FriendList
  @aws_subscribe(mutations: ["updateFriendList"])

}

